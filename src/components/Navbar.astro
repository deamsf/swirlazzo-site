---
import Logo from './Logo.astro';
import { Instagram } from 'lucide-astro';
import '../styles/navbar.css';

// Get the current URL path to determine active link
const currentPath = Astro.url.pathname;
---

<header class="navbar">
  <div class="container">
    <div class="navbar-content">
      <div class="navbar-brand">
        <a href="/">
          <Logo />
          <span class="brand-name">Swirlazzo</span>
        </a>
      </div>
      <nav class="navbar-menu">
        <ul class="navbar-links">
          <li><a href="#collecties" class={currentPath === '/' && 'active'}>Collecties</a></li>
          <li><a href="#over-mij" class={currentPath === '/#over-mij' && 'active'}>Over mij</a></li>
        </ul>
        <div class="navbar-social">
          <a href="https://instagram.com/swirlazzo" target="_blank" rel="noopener noreferrer" aria-label="Instagram">
            <Instagram size={24} />
          </a>
        </div>
        <button class="mobile-menu-toggle" aria-label="Toggle menu">
          <span></span>
          <span></span>
          <span></span>
        </button>
      </nav>
    </div>
  </div>
</header>

<script>
  // Mobile menu toggle
  const mobileMenuToggle = document.querySelector('.mobile-menu-toggle');
  const navbarLinks = document.querySelector('.navbar-links');

  mobileMenuToggle?.addEventListener('click', () => {
    mobileMenuToggle.classList.toggle('active');
    navbarLinks?.classList.toggle('active');
  });

  // Close mobile menu when clicking on a link
  const navLinks = document.querySelectorAll('.navbar-links a');
  navLinks.forEach(link => {
    link.addEventListener('click', () => {
      mobileMenuToggle?.classList.remove('active');
      navbarLinks?.classList.remove('active');
    });
  });

  // Highlight active section based on scroll position
  document.addEventListener('DOMContentLoaded', () => {
    const sections = document.querySelectorAll('section[id]');
    const navLinks = document.querySelectorAll('.navbar-links a');
    
    function highlightNavOnScroll() {
      const scrollPosition = window.scrollY + 100; // Add offset for navbar height
      
      sections.forEach(section => {
        const sectionTop = section.offsetTop;
        const sectionHeight = section.offsetHeight;
        const sectionId = section.getAttribute('id');
        
        if (scrollPosition >= sectionTop && scrollPosition < sectionTop + sectionHeight) {
          navLinks.forEach(link => {
            link.classList.remove('active');
            if (link.getAttribute('href') === `#${sectionId}`) {
              link.classList.add('active');
            }
          });
        }
      });
    }
    
    window.addEventListener('scroll', highlightNavOnScroll);
    highlightNavOnScroll(); // Run once on page load
  });
</script>